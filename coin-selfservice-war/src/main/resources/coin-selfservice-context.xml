<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright 2012 SURFnet bv, The Netherlands

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
  -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd">


  <context:component-scan base-package="nl.surfnet.coin.selfservice"/>
  <cache:annotation-driven key-generator="methodNameAwareCacheKeyGenerator" />

  <bean id="selfserviceDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
    <property name="driverClass" value="${coin-selfservice.jdbc.driver}" />
    <property name="jdbcUrl" value="${coin-selfservice.jdbc.url}" />
    <property name="user" value="${coin-selfservice.jdbc.user}" />
    <property name="password" value="${coin-selfservice.jdbc.password}" />
    <property name="initialPoolSize" value="1" />
    <property name="maxPoolSize" value="20" />
    <property name="minPoolSize" value="1" />
    <property name="acquireIncrement" value="2" />
    <property name="acquireRetryAttempts" value="15" />
    <property name="idleConnectionTestPeriod"
              value="${coin-selfservice.database.idleConnectionTestPeriod}" />
    <property name="maxIdleTime" value="${coin-selfservice.database.maxIdleTime}" />
  </bean>

  <bean id="ebDataSource" class="com.jolbox.bonecp.BoneCPDataSource" destroy-method="close">
    <property name="driverClass" value="${coin-eb-db-driver}"/>
    <property name="jdbcUrl" value="${coin-eb-db-url}"/>
    <property name="username" value="${coin-eb-db-username}"/>
    <property name="password" value="${coin-eb-db-password}"/>
    <property name="idleConnectionTestPeriodInMinutes" value="5"/>
    <property name="idleMaxAgeInMinutes" value="5"/>
    <property name="maxConnectionsPerPartition" value="20"/>
    <property name="minConnectionsPerPartition" value="2"/>
    <property name="partitionCount" value="3"/>
    <property name="acquireIncrement" value="2"/>
    <property name="statementsCacheSize" value="100"/>
    <property name="releaseHelperThreads" value="3"/>
  </bean>

  <bean id="ebJdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
    <constructor-arg ref="ebDataSource"/>
  </bean>

  <bean id="log4jInitialization"
        class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
    <property name="targetClass" value="org.springframework.util.Log4jConfigurer"/>
    <property name="targetMethod" value="initLogging"/>
    <property name="arguments">
      <list>
        <value>classpath:log4j.xml</value>
        <value>5000</value>
      </list>
    </property>
  </bean>

  <bean id="localeResolver"
        class="org.springframework.web.servlet.i18n.SessionLocaleResolver">
    <!-- Set the default Locale to English -->
    <property name="defaultLocale" value="en_EN"/>
  </bean>

  <bean class="com.googlecode.flyway.core.Flyway" init-method="migrate">
    <property name="baseDir" value="${coin-selfservice.db.migrations.folder}"/>
    <property name="dataSource" ref="selfserviceDataSource"/>
    <property name="sqlMigrationPrefix" value="S" />
  </bean>

  <bean id="federationProviderService"  class="nl.surfnet.coin.selfservice.service.impl.FederationProviderService">
    <constructor-arg value="fedcfg.xml" />
  </bean>

  <bean id="providerService" class="nl.surfnet.coin.selfservice.service.impl.CompositeServiceProviderService">
    <property name="serviceProviderServices">
      <list>
        <bean class="nl.surfnet.coin.selfservice.service.impl.ServiceRegistryProviderService" />
        <ref bean="federationProviderService" />
      </list>
    </property>
  </bean>

  <bean id="janusClient" class="nl.surfnet.coin.janus.JanusRestClient">
    <property name="janusUri" value="${janus.uri}" />
    <property name="user" value="${janus.user}" />
    <property name="secret" value="${janus.secret}" />
  </bean>

  <bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager">
    <property name="cacheManager" ref="ehcache" />
  </bean>

  <bean id="ehcache"
        class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
    <property name="configLocation" value="classpath:selfservice-ehcache.xml" />
  </bean>
  <bean id="methodNameAwareCacheKeyGenerator" class="nl.surfnet.coin.shared.cache.MethodNameAwareCacheKeyGenerator" />

  <bean id="jiraService" class="${jiraServiceClass}">
    <property name="baseUrl" value="${jiraBaseUrl}" />
    <property name="username" value="${jiraUsername}" />
    <property name="password" value="${jiraPassword}" />
    <property name="projectKey" value="${jiraProjectKey}" />
  </bean>

  <bean id="notificationService" class="nl.surfnet.coin.selfservice.service.impl.NotificationServiceImpl">
    <property name="administrativeEmail" value="${coin-administrative-email}"/>
  </bean>

</beans>