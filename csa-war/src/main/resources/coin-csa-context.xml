<?xml version="1.0" encoding="UTF-8"?>
<!-- Copyright 2012 SURFnet bv, The Netherlands Licensed under the Apache 
  License, Version 2.0 (the "License"); you may not use this file except in 
  compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 
  Unless required by applicable law or agreed to in writing, software distributed 
  under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES 
  OR CONDITIONS OF ANY KIND, either express or implied. See the License for 
  the specific language governing permissions and limitations under the License. -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd

        http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

  <context:component-scan base-package="nl.surfnet.coin.csa">
    <context:exclude-filter type="regex" expression="nl\.surfnet\.coin\.csa\.control\..*" />
    <context:exclude-filter type="regex" expression="nl\.surfnet\.coin\.csa\.api\..*" />
  </context:component-scan>

  <cache:annotation-driven key-generator="methodNameAwareCacheKeyGenerator" />

  <!-- Our "own" database for tracking connect/disconnect requests -->
  <bean id="csaDataSource" class="com.jolbox.bonecp.BoneCPDataSource"
    destroy-method="close">
    <property name="driverClass" value="${coin-csa.jdbc.driver}" />
    <property name="jdbcUrl" value="${coin-csa.jdbc.url}" />
    <property name="username" value="${coin-csa.jdbc.user}" />
    <property name="password" value="${coin-csa.jdbc.password}" />
    <property name="idleConnectionTestPeriodInSeconds"
      value="${coin-csa.database.idleConnectionTestPeriod}" />
    <property name="idleMaxAgeInSeconds" value="${coin-csa.database.maxIdleTime}" />
    <property name="maxConnectionsPerPartition" value="5" />
    <property name="minConnectionsPerPartition" value="1" />
    <property name="partitionCount" value="2" />
    <property name="statementsCacheSize" value="100" />
  </bean>

  <bean id="csaJdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
    <constructor-arg ref="csaDataSource" />
  </bean>

  <bean id="localeResolver" class="org.springframework.web.servlet.i18n.CookieLocaleResolver">
    <property name="defaultLocale" value="en"/>
  </bean>

  <bean class="com.googlecode.flyway.core.Flyway" init-method="migrate">
    <property name="baseDir" value="${coin-csa.db.migrations.folder}" />
    <property name="dataSource" ref="csaDataSource" />
    <property name="disableInitCheck" value="true" /><!-- skip because Hibernate creates its own table -->
  </bean>

  <bean id="providerService"
    class="nl.surfnet.coin.csa.service.impl.ServiceRegistryProviderService">
  </bean>

  <bean id="openConextApiClient" class="${openConextApiClient}">
    <property name="callbackUrl" value="${api-callbackuri}" />
    <property name="endpointBaseUrl" value="${api-baseurl}" />
    <property name="consumerKey" value="${api-consumerkey}"/>
    <property name="consumerSecret" value="${api-consumersecret}" />
    <property name="version" value="v2" />
  </bean>

  <bean id="janusClient" class="${janus.class}">
    <property name="janusUri" value="${janus.uri}" />
    <property name="user" value="${janus.user}" />
    <property name="secret" value="${janus.secret}" />
  </bean>

  <bean id="cacheManager" class="${cacheManagerClass}">
    <property name="cacheManager" ref="ehcache" />
  </bean>
  
  <bean id="ehcache"
    class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
    <property name="shared" value="true"/>
    <property name="configLocation" value="classpath:csa-ehcache.xml" />
  </bean>
  <bean id="methodNameAwareCacheKeyGenerator"
    class="nl.surfnet.coin.shared.cache.MethodNameAwareCacheKeyGenerator" />

  <bean id="jiraService" class="${jiraServiceClass}">
    <property name="baseUrl" value="${jiraBaseUrl}" />
    <property name="username" value="${jiraUsername}" />
    <property name="password" value="${jiraPassword}" />
    <property name="projectKey" value="${jiraProjectKey}" />
  </bean>

  <bean id="emailService"
    class="nl.surfnet.coin.csa.service.impl.EmailServiceImpl">
    <property name="administrativeEmail" value="${coin-administrative-email}" />
  </bean>

  <bean id="licensingService" class="${crmServiceClass}">
    <property name="endpoint" value="${crmServiceClassEndpoint}" />
    <property name="debug" value="${crmServiceClassDebug}" />
  </bean>

  <bean id="personAttributeLabelService"
    class="nl.surfnet.coin.csa.service.impl.PersonAttributeLabelServiceJsonImpl">
    <constructor-arg name="attributeJsonFile"
      value="${personAttributesLabels.location}" />
  </bean>

  <bean id="csaSessionFactory"
    class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
    <property name="dataSource">
      <ref local="csaDataSource" />
    </property>
    <property name="hibernateProperties">
      <props>
        <prop key="hibernate.dialect">${hibernate-csa.dialect}</prop>
        <prop key="hibernate.query.substitutions">true 1, false 0</prop>
        <prop key="hibernate.show_sql">${hibernate-csa.show_sql}</prop>
        <prop key="hibernate.format_sql">${hibernate-csa.format_sql}</prop>
        <prop key="hibernate.cache.use_second_level_cache">false</prop>
        <prop key="hibernate.hbm2ddl.auto">${hibernate-csa.hbm2ddl.auto}</prop>
        <prop key="hibernate.cache.use_query_cache">false</prop>
        <prop key="hibernate.jdbc.wrap_result_sets">true</prop>
        <prop key="hibernate.connection.release_mode">on_close</prop>
        <prop key="hibernate.connection.provider_class">org.hibernate.connection.C3P0ConnectionProvider
        </prop>
        <prop key="hibernate.c3p0.min_size">2</prop>
        <prop key="hibernate.c3p0.max_size">10</prop>

        <prop key="hibernate.c3p0.acquireRetryAttempts">5</prop>
        <prop key="hibernate.c3p0.acquireIncrement">2</prop>
        <prop key="hibernate.c3p0.idleConnectionTestPeriod">15</prop>
      </props>
    </property>
    <property name="annotatedClasses">
      <list>
        <value>nl.surfnet.coin.shared.domain.DomainObject</value>
        <value>nl.surfnet.coin.csa.domain.CompoundServiceProvider</value>
        <value>nl.surfnet.coin.csa.domain.Field</value>
        <value>nl.surfnet.coin.csa.domain.FieldString</value>
        <value>nl.surfnet.coin.csa.domain.FieldImage</value>
        <value>nl.surfnet.coin.csa.domain.Screenshot</value>
        <value>nl.surfnet.coin.csa.model.Facet</value>
        <value>nl.surfnet.coin.csa.model.FacetValue</value>
        <value>nl.surfnet.coin.csa.model.MultilingualString</value>
        <value>nl.surfnet.coin.csa.model.LocalizedString</value>
      </list>
    </property>
    <property name="namingStrategy">
      <bean class="org.hibernate.cfg.ImprovedNamingStrategy" />
    </property>
    <property name="useTransactionAwareDataSource" value="true" />
  </bean>

  <tx:annotation-driven transaction-manager="csaTransactionManager" />

  <bean id="csaTransactionManager"
    class="org.springframework.orm.hibernate3.HibernateTransactionManager">
    <property name="sessionFactory">
      <ref local="csaSessionFactory" />
    </property>
  </bean>

  <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
    <property name="maxUploadSize" value="10000000" />
  </bean>

  <bean id="freemarkerConfiguration" class="org.springframework.ui.freemarker.FreeMarkerConfigurationFactoryBean">
     <property name="templateLoaderPath" value="classpath:/ftl/"/>
  </bean>

  <bean id="authorizationServerFilter" class="${authorizationServerFilterClass}">
    <property name="authorizationServerUrl" value="${adminService.tokenVerificationUrl}" />
    <property name="resourceServerKey" value="${adminService.resourceServerKey}" />
    <property name="resourceServerSecret" value="${adminService.resourceServerSecret}" />
    <property name="cacheEnabled" value="${adminService.cacheEnabled}" />
    <property name="allowCorsRequests" value="${adminService.allowCorsRequests}" />
    <property name="typeInformationIsIncluded" value="${adminService.jsonTypeInfoIncluded}" />
  </bean>

  <util:properties id="applicationProperties" location="classpath:application.properties"/>

</beans>
